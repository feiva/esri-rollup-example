define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","esri/Map","esri/views/MapView","esri/layers/FeatureLayer","esri/widgets/BasemapToggle","esri/widgets/BasemapToggle/BasemapToggleViewModel","dojo/i18n!./nls/strings"],function(e,a,t,n,i,s,l,p,d){function o(e){return e.replace?e.replace(/-|_/g," "):e}e="default"in e?e["default"]:e,a="default"in a?a["default"]:a,t="default"in t?t["default"]:t,n="default"in n?n["default"]:n,i="default"in i?i["default"]:i,s="default"in s?s["default"]:s,l="default"in l?l["default"]:l,p="default"in p?p["default"]:p,d="default"in d?d["default"]:d;var r={mapProps:{center:[-122.33,37.75],zoom:11,basemap:"dark-gray"},secondaryBasemap:"streets",fuelingStationLayerProps:{url:"https://services.arcgis.com/rOo16HdIMeOBI4Mb/arcgis/rest/services/Alternative_Fueling_Stations/FeatureServer/0",popupTemplate:{title:"{Station_Na}",content:'\n        <p>{Street_Add}<br>\n        {City}, {State}, {ZIP}</p>\n\n        <p><b>Fuel Type:</b> {Fuel_Type}</p>\n        <p><b>Phone:</b> <a href="tel:{Station_Ph}">{Station_Ph}</a></p>\n        <p><b>Open to:</b> {Groups_Wit}</p>\n        <p><b>Hours:</b> {Access_Day}</p>'},outFields:["Station_Na","Street_Add","City","State","ZIP","Fuel_Type","Station_Ph","Groups_Wit","Access_Day"]}},u=e([],{init:function(e){this.map=new n({basemap:e.basemap}),delete e.basemap,e.map=this.map,this.view=new i(e)},createBasemapToggle:function(e,a){return e&&a&&this.view?new l({viewModel:new p({view:this.view,secondaryBasemap:a})},e):void 0},addFeatureLayer:function(e){if(this.map){var a=new s(e);return this.map.add(a),a}}});if(!c)var c=new u;var g='<div class="panel panel-default">\r\n  <div class="panel-heading">\r\n    <h4 class="panel-title">\r\n      <a role="button" data-toggle="collapse" data-dojo-attach-point="titleNode" data-target=".info-panel" aria-expanded="false" aria-controls="collapseOne"></a>\r\n    </h4>\r\n  </div>\r\n  <div class="panel-collapse collapse in info-panel" role="tabpanel">\r\n    <div class="panel-body">\r\n      <h4><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> ${nls.About}</h4>\r\n      <p>${nls.sidePanelMessage}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n',f=e([a,t],{baseClass:"side-panel",nls:d,templateString:g,_setTitleAttr:{node:"titleNode",type:"innerHTML"}}),h=e([a,t],{baseClass:"app",templateString:'\n    <div>\n      <div data-dojo-attach-point="mapNode" class="map-container">\n        <div data-dojo-attach-point="sidePanelNode"></div>\n        <div data-dojo-attach-point="basemapToggleNode" class="basemap-toggle" />\n      </div>\n    </div>\n  ',postCreate:function(){var e=this;this.inherited(arguments),r.mapProps.container=this.mapNode,c.init(r.mapProps),this.sidePanel=new f({},this.sidePanelNode),this.basemapToggle=c.createBasemapToggle(this.basemapToggleNode,r.secondaryBasemap),c.addFeatureLayer(r.fuelingStationLayerProps).then(function(a){e.sidePanel.set("title",o(a.title||a.name))})},startup:function(){this.sidePanel.startup(),this.basemapToggle.startup()}});window.app=new h({},"app"),window.app.startup()});
//# sourceMappingURL=data:application/json;base64,
